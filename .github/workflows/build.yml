name: CI/CDPipeline

on:
  push:
    branches:
    - '*'
    tags:
    - '*'
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix: 
        node_version: 
        - 12    
        os: 
        - ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: setup gcloud CLI
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with: 
        version: '275.0.0'
        service_account_key: ${{ secrets.GCP_base64 }}   
    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: gcloud auth configure-docker  
    - name: Use Node version 12.6
      uses: actions/setup-node@v1
      with:
        version:  ${{ matrix.node_version }}
    - name: Npm Install
      run: | 
        npm install  

    - name: grunt build and test
      run: |
        grunt build
        grunt test
        grunt coverage
    - name: Test Coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: ./output/coverage/lcov.info
    - name: build the docker image with committ SHA for staging
      if: github.ref == 'refs/heads/master'
      run: docker build  -t eu.gcr.io/sap-cla-assistant/cla-assistant:${GITHUB_SHA} .
    - name: build the docker images with tag name and latest for production
      if: startsWith(github.ref, 'refs/tags')
      run: docker build  -t eu.gcr.io/sap-cla-assistant/cla-assistant:${GITHUB_REF:10}  -t eu.gcr.io/sap-cla-assistant/cla-assistant:latest -t sapclaassistant/claassistant:latest -t sapclaassistant/claassistant:${GITHUB_REF:10} .
    - name: push the latest and release images to dockerhub only for releases
      if: startsWith(github.ref, 'refs/tags')
      run: | 
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker push sapclaassistant/claassistant
    - name: push images to gcp 
      if: github.ref == 'refs/heads/master'  || startsWith(github.ref, 'refs/tags')
      run: docker push eu.gcr.io/sap-cla-assistant/cla-assistant
    - name: deploy to staging cloud run service
      if: github.ref == 'refs/heads/master' 
      run: gcloud --quiet --project sap-cla-assistant beta run deploy cla-assistant-staging --platform managed --region europe-west1 --image eu.gcr.io/sap-cla-assistant/cla-assistant:${GITHUB_SHA}

    - name: Count Lines of Code (cloc)
      if: github.ref != 'refs/heads/master'
      uses: djdefi/cloc-action@main
    - name: Update cloc file
      if: github.ref != 'refs/heads/master'
      run: |
        git checkout cloc || git checkout -b cloc
        mkdir -p docs/cloc
        cp cloc.txt docs/cloc/cloc.txt
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/cloc/cloc.txt
        git commit -m 'Auto update cloc info' || exit 0
        git push origin HEAD:cloc
